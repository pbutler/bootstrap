 ### Added by Zinit's installer
if [[ ! -f $HOME/.cache/zinit/bin/zinit.zsh ]]; then
    print -P "%F{33}▓▒░ %F{220}Installing %F{33}DHARMA%F{220} Initiative Plugin Manager (%F{33}zdharma/zinit%F{220})…%f"
    command mkdir -p "$HOME/.cache/zinit" && command chmod g-rwX "$HOME/.cache/zinit"
    command git clone https://github.com/zdharma-continuum/zinit "$HOME/.cache/zinit/bin" && \
        print -P "%F{33}▓▒░ %F{34}Installation successful.%f%b" || \
        print -P "%F{160}▓▒░ The clone has failed.%f%b"
fi

source "$HOME/.cache/zinit/bin/zinit.zsh"
autoload -Uz _zinit
(( ${+_comps} )) && _comps[zinit]=_zinit

# Load a few important annexes, without Turbo
# (this is currently required for annexes)
zinit light-mode for \
    zdharma-continuum/zinit-annex-as-monitor \
    zdharma-continuum/zinit-annex-bin-gem-node \
    zdharma-continuum/zinit-annex-patch-dl \
    zdharma-continuum/zinit-annex-rust

### End of Zinit's installer chunk
zinit ice blockf
zinit light zsh-users/zsh-completions

zinit light zsh-users/zsh-autosuggestions
zinit light zdharma/fast-syntax-highlighting

zinit ice depth=1
# zinit light romkatv/powerlevel10k

# zinit ice atclone"dircolors -b LS_COLORS > clrs.zsh" \
#     atpull'%atclone' pick"clrs.zsh" nocompile'!' \
#     atload'zstyle ":completion:*" list-colors “${(s.:.)LS_COLORS}”'
# zinit light trapd00r/LS_COLORS
zinit light trystan2k/zsh-tab-title
# zinit light softmoth/zsh-vim-mode
zinit load jeffreytse/zsh-vi-mode



# fzf
zinit ice lucid wait
zinit snippet OMZP::fzf

# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi


if [ -d /usr/local/opt/coreutils/libexec/gnubin ]; then
	HOMEBREW=1
	export PATH=/usr/local/opt/coreutils/libexec/gnubin:$PATH
	export MANPATH=/usr/local/opt/coreutils/libexec/gnuman:$MANPATH
fi


if ! command -v fzf >/dev/null 2>&1; then
  source <(fzf --zsh)
  export FZF_DEFAULT_OPTS=" \
  --color=bg+:#363a4f,bg:#24273a,spinner:#f4dbd6,hl:#ed8796 \
  --color=fg:#cad3f5,header:#ed8796,info:#c6a0f6,pointer:#f4dbd6 \
  --color=marker:#b7bdf8,fg+:#cad3f5,prompt:#c6a0f6,hl+:#ed8796 \
  --color=selected-bg:#494d64 \
  --multi"
fi

if ! command -v bat >/dev/null 2>&1; then
  export BAT_THEME="Catppuccin Macchiato"
  export BAT_STYLE="plain"
  export BAT_PAGER="less -RF"
fi

export EZA_CONFIG_DIR=~/.config/eza/


export PATH=~/.local/bin:$PATH

export PYENV_ROOT="$HOME/.pyenv"
export PATH="$PYENV_ROOT/bin:$PATH"
if command -v pyenv 1>/dev/null 2>&1; then
	eval "$(pyenv init --path)"
fi

source "$XDG_CONFIG_HOME/zsh/aliases.zsh"

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f "$XDG_CONFIG_HOME/zsh/p10k.zsh" ]] || source "$XDG_CONFIG_HOME/zsh/p10k.zsh"

# autojump
[ -f /usr/local/etc/profile.d/autojump.sh ] && . /usr/local/etc/profile.d/autojump.sh

zinit light MichaelAquilina/zsh-autoswitch-virtualenv

 vmake () {
        local version=${2:-3}
        if [ -z $1 ]; then
           echo please specify a venv name
           return -1
        fi
        if [ -d ~/.virtualenvs/$1 ]; then
            echo $1 already exists
            return -1
        fi
        PYV=$(python${version} -V)
        echo Creating venv $1 with $PYV
        python${version} -m venv ~/.virtualenvs/$1
        vactivate $1
        python -mpip install --upgrade pip wheel
        deactivate
 }


 vactivate () {
        if [ -z $1 ]; then
           echo please specify a venv name
           return -1
        fi
        if [ ! -d ~/.virtualenvs/$1 ]; then
            echo $1 doesn\'t exist
            return -1
        fi
        source ~/.virtualenvs/$1/bin/activate
 }

 _vactivate () {
         local cur prev opts base
         COMPREPLY=()
         cur="${COMP_WORDS[COMP_CWORD]}"
         prev="${COMP_WORDS[COMP_CWORD-1]}"
         opts=`ls --color=none ~/.virtualenvs/`
         COMPREPLY=( $(compgen -W "${opts}" -- ${cur}) )
         return 0
 }

 vset () {
        if [ -z $1 ]; then
           echo please specify a venv name
           return -1
        fi
        if [ ! -d ~/.virtualenvs/$1 ]; then
            echo $1 doesn\'t exist
            return -1
        fi
        echo $1 > .venv
        chmod 0644 .venv
        vactivate $1
 }

autoload -Uz compinit
compinit -d $XDG_CACHE_HOME/zsh/zcompdump-$ZSH_VERSION

autoload bashcompinit
bashcompinit
complete -F _vactivate vactivate
complete -F _vactivate vset

if command -v starship >/dev/null 2>&1; then
  eval "$(starship init zsh)"
fi
