# Place a copy of this config to ~/.aerospace.toml
# After that, you can edit ~/.aerospace.toml to your liking

# You can use it to add commands that run after login to macOS user session.
# 'start-at-login' needs to be 'true' for 'after-login-command' to work
# Available commands: https://nikitabobko.github.io/AeroSpace/commands
after-login-command = []

# You can use it to add commands that run after AeroSpace startup.
# 'after-startup-command' is run after 'after-login-command'
# Available commands : https://nikitabobko.github.io/AeroSpace/commands
after-startup-command = []

# Start AeroSpace at login
start-at-login = true

# Normalizations. See: https://nikitabobko.github.io/AeroSpace/guide#normalization
enable-normalization-flatten-containers = true
enable-normalization-opposite-orientation-for-nested-containers = true

# See: https://nikitabobko.github.io/AeroSpace/guide#layouts
# The 'accordion-padding' specifies the size of accordion padding
# You can set 0 to disable the padding feature
accordion-padding = 30

# Possible values: tiles|accordion
default-root-container-layout = 'tiles'

# Possible values: horizontal|vertical|auto
# 'auto' means: wide monitor (anything wider than high) gets horizontal orientation,
#               tall monitor (anything higher than wide) gets vertical orientation
default-root-container-orientation = 'auto'

# Possible values: (qwerty|dvorak)
# See https://nikitabobko.github.io/AeroSpace/guide#key-mapping
key-mapping.preset = 'qwerty'

# Mouse follows focus when focused monitor changes
# Drop it from your config, if you don't like this behavior
# See https://nikitabobko.github.io/AeroSpace/guide#on-focus-changed-callbacks
# See https://nikitabobko.github.io/AeroSpace/commands#move-mouse
# Fallback value (if you omit the key): on-focused-monitor-changed = []
on-focused-monitor-changed = ['move-mouse monitor-lazy-center']

# Gaps between windows (inner-*) and between monitor edges (outer-*).
# Possible values:
# - Constant:     gaps.outer.top = 8
# - Per monitor:  gaps.outer.top = [{ monitor.main = 16 }, { monitor."some-pattern" = 32 }, 24]
#                 In this example, 24 is a default value when there is no match.
#                 Monitor pattern is the same as for 'workspace-to-monitor-force-assignment'.
#                 See: https://nikitabobko.github.io/AeroSpace/guide#assign-workspaces-to-monitors
[gaps]
inner.horizontal = 0
inner.vertical =   0
outer.left =       0
outer.bottom =     0
outer.top =        0
outer.right =      0

# 'main' binding mode declaration
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
# 'main' binding mode must be always presented
# Fallback value (if you omit the key): mode.main.binding = {}
[mode.main.binding]

# All possible keys:
# - Letters.        a, b, c, ..., z
# - Numbers.        0, 1, 2, ..., 9
# - Keypad numbers. keypad0, keypad1, keypad2, ..., keypad9
# - F-keys.         f1, f2, ..., f20
# - Special keys.   minus, equal, period, comma, slash, backslash, quote, semicolon, backtick,
#                   leftSquareBracket, rightSquareBracket, space, enter, esc, backspace, tab
# - Keypad special. keypadClear, keypadDecimalMark, keypadDivide, keypadEnter, keypadEqual,
#                   keypadMinus, keypadMultiply, keypadPlus
# - Arrows.         left, down, up, right

# All possible modifiers: cmd, alt, ctrl, shift

# All possible commands: https://nikitabobko.github.io/AeroSpace/commands

# See: https://nikitabobko.github.io/AeroSpace/commands#exec-and-forget
# You can uncomment the following lines to open up terminal with alt + enter shortcut (like in i3)
# alt-enter = '''exec-and-forget osascript -e '
# tell application "Terminal"
#     do script
#     activate
# end tell'
# '''

# See: https://nikitabobko.github.io/AeroSpace/commands#layout
cmd-ctrl-alt-shift-t = 'layout tiles horizontal vertical'
cmd-ctrl-alt-shift-a = 'layout accordion horizontal vertical'

# See: https://nikitabobko.github.io/AeroSpace/commands#focus
cmd-ctrl-alt-shift-h = 'focus left'
cmd-ctrl-alt-shift-j = 'focus down'
cmd-ctrl-alt-shift-k = 'focus up'
cmd-ctrl-alt-shift-l = 'focus right'

# See: https://nikitabobko.github.io/AeroSpace/commands#move
cmd-ctrl-alt-shift-left = 'move left'
cmd-ctrl-alt-shift-down = 'move down'
cmd-ctrl-alt-shift-up = 'move up'
cmd-ctrl-alt-shift-right = 'move right'

# See: https://nikitabobko.github.io/AeroSpace/commands#resize
cmd-ctrl-alt-shift-minus = 'resize smart -50'
cmd-ctrl-alt-shift-equal = 'resize smart +50'

# See: https://nikitabobko.github.io/AeroSpace/commands#workspace
cmd-ctrl-alt-shift-1 = 'workspace 1'
cmd-ctrl-alt-shift-2 = 'workspace 2'
cmd-ctrl-alt-shift-3 = 'workspace 3'
cmd-ctrl-alt-shift-4 = 'workspace 4'
cmd-ctrl-alt-shift-5 = 'workspace 5'
cmd-ctrl-alt-shift-6 = 'workspace 6'
cmd-ctrl-alt-shift-7 = 'workspace 7'
cmd-ctrl-alt-shift-8 = 'workspace 8'
cmd-ctrl-alt-shift-9 = 'workspace 9'
cmd-ctrl-alt-shift-0 = 'workspace 10'
cmd-ctrl-alt-shift-backtick = 'workspace A'
cmd-ctrl-alt-shift-f1 = 'workspace 11'
cmd-ctrl-alt-shift-f2 = 'workspace 12'
cmd-ctrl-alt-shift-f3 = 'workspace 13'
cmd-ctrl-alt-shift-f4 = 'workspace 14'
cmd-ctrl-alt-shift-f5 = 'workspace 15'
cmd-ctrl-alt-shift-f6 = 'workspace 16'
cmd-ctrl-alt-shift-f7 = 'workspace 17'
cmd-ctrl-alt-shift-f8 = 'workspace 18'
cmd-ctrl-alt-shift-f9 = 'workspace 19'
# alt-a = 'workspace A' # In your config, you can drop workspace bindings that you don't need
# alt-b = 'workspace B'
# alt-c = 'workspace C'
# alt-d = 'workspace D'
# alt-e = 'workspace E'
# alt-f = 'workspace F'
# alt-g = 'workspace G'
# alt-i = 'workspace I'
# alt-m = 'workspace M'
# alt-n = 'workspace N'
# alt-o = 'workspace O'
# alt-p = 'workspace P'
# alt-q = 'workspace Q'
# alt-r = 'workspace R'
# alt-s = 'workspace S'
# alt-t = 'workspace T'
# alt-u = 'workspace U'
# alt-v = 'workspace V'
# alt-w = 'workspace W'
# alt-x = 'workspace X'
# alt-y = 'workspace Y'
# alt-z = 'workspace Z'

cmd-ctrl-alt-shift-z = "fullscreen"
cmd-ctrl-alt-shift-tab = "exec-and-forget bash -c 'aerospace focus-back-and-forth || aerospace workspace-back-and-forth'"


# See: https://nikitabobko.github.io/AeroSpace/commands#workspace-back-and-forth
alt-tab = 'workspace-back-and-forth'
# See: https://nikitabobko.github.io/AeroSpace/commands#move-workspace-to-monitor
alt-shift-tab = 'move-workspace-to-monitor --wrap-around next'

#modality
# See: https://nikitabobko.github.io/AeroSpace/commands#mode
cmd-ctrl-alt-shift-semicolon = 'mode service'
cmd-ctrl-alt-shift-r = 'mode reorg'

[mode.reorg.binding]
# See: https://nikitabobko.github.io/AeroSpace/commands#move-node-to-workspace
1 = 'move-node-to-workspace 1'
2 = 'move-node-to-workspace 2'
3 = 'move-node-to-workspace 3'
4 = 'move-node-to-workspace 4'
5 = 'move-node-to-workspace 5'
6 = 'move-node-to-workspace 6'
7 = 'move-node-to-workspace 7'
8 = 'move-node-to-workspace 8'
9 = 'move-node-to-workspace 9'
0 = 'move-node-to-workspace 10'
backtick = 'move-node-to-workspace 10'
f1 = 'move-node-to-workspace 11'
f2 = 'move-node-to-workspace 12'
f3 = 'move-node-to-workspace 13'
f4 = 'move-node-to-workspace 14'
f5 = 'move-node-to-workspace 15'
f6 = 'move-node-to-workspace 16'
f7 = 'move-node-to-workspace 17'
f8 = 'move-node-to-workspace 18'
f9 = 'move-node-to-workspace 19'
# alt-shift-b = 'move-node-to-workspace B'
# alt-shift-c = 'move-node-to-workspace C'
# alt-shift-d = 'move-node-to-workspace D'
# alt-shift-e = 'move-node-to-workspace E'
# alt-shift-f = 'move-node-to-workspace F'
# alt-shift-g = 'move-node-to-workspace G'
# alt-shift-i = 'move-node-to-workspace I'
# alt-shift-m = 'move-node-to-workspace M'
# alt-shift-n = 'move-node-to-workspace N'
# alt-shift-o = 'move-node-to-workspace O'
# alt-shift-p = 'move-node-to-workspace P'
# alt-shift-q = 'move-node-to-workspace Q'
# alt-shift-r = 'move-node-to-workspace R'
# alt-shift-s = 'move-node-to-workspace S'
# alt-shift-t = 'move-node-to-workspace T'
# alt-shift-u = 'move-node-to-workspace U'
# alt-shift-v = 'move-node-to-workspace V'
# alt-shift-w = 'move-node-to-workspace W'
# alt-shift-x = 'move-node-to-workspace X'
# alt-shift-y = 'move-node-to-workspace Y'
# alt-shift-z = 'move-node-to-workspace Z'

r = ['flatten-workspace-tree', 'mode main'] # reset layout
f = ['layout floating tiling', 'mode main'] # Toggle between floating and tiling layout
space = ["layout tiles accordion"] 

cmd-ctrl-alt-shift-left= ['join-with left']
cmd-ctrl-alt-shift-down = ['join-with down']
cmd-ctrl-alt-shift-up = ['join-with up']
cmd-ctrl-alt-shift-right = ['join-with right']

# See: https://nikitabobko.github.io/AeroSpace/commands#focus
cmd-ctrl-alt-shift-h = 'focus left'
cmd-ctrl-alt-shift-j = 'focus down'
cmd-ctrl-alt-shift-k = 'focus up'
cmd-ctrl-alt-shift-l = 'focus right'
esc = ['mode main']


# 'service' binding mode declaration.
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
[mode.service.binding]
esc = ['reload-config', 'mode main']
# backspace = ['close-all-windows-but-current', 'mode main']

# sticky is not yet supported https://github.com/nikitabobko/AeroSpace/issues/2
#s = ['layout sticky tiling', 'mode main']


[[on-window-detected]]
if.app-id = 'com.apple.finder'
run = 'move-node-to-workspace 1'

## Chat apps
[[on-window-detected]]
if.app-id = 'com.apple.MobileSMS'
run = 'move-node-to-workspace 3'

[[on-window-detected]]
if.app-id = 'com.hnc.Discord'
run = 'move-node-to-workspace 3'

[[on-window-detected]]
if.app-id = 'com.tinyspec.slackmacgap'
run = 'move-node-to-workspace 3'

[[on-window-detected]]
if.window-title-regex-substring = 'Google Chat.*'
run = 'move-node-to-workspace 3'

#Teams/email
[[on-window-detected]]
if.app-id = 'com.microsoft.teams2'
run = 'move-node-to-workspace 13'

[[on-window-detected]]
if.app-id = 'com.microsoft.teams2'
run = 'move-node-to-workspace 13'

[[on-window-detected]]
if.app-id = 'com.apple.FaceTime'
run = 'layout floating'

#Note taking
[[on-window-detected]]
if.app-id = 'md.obsidian'
run = 'move-node-to-workspace 6'

[[on-window-detected]]
if.app-id = 'net.elasticthreads.nv'
run = 'move-node-to-workspace 6'




#Floating windows
[[on-window-detected]]
if.app-id = 'com.apple.systempreferences'
run = 'layout floating'

[[on-window-detected]]
if.app-id = 'com.haystacksoftware.Arq'
run = 'layout floating'

[[on-window-detected]]
if.app-id = 'com.objective-see.lulu.app'
run = 'layout floating'

[[on-window-detected]]
if.app-id = 'org.pqrs.Karabiner-Elements.Settings'
run = 'layout floating'

[[on-window-detected]]
if.app-id = 'org.pqrs.Karabiner-EventViewer'
run = 'layout floating'
